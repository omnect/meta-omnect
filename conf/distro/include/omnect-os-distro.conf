TARGET_VENDOR = "-omnect"
DISTRO = "omnect-os"
DISTRO_NAME = "${DISTRO_NAME_PREFIX}OMNECT${DISTRO_NAME_SUFFIX}"
DISTRO_VERSION = "${OE_VERSION}.${OMNECT_BUILD_NUMBER}"
SDK_NAME_PREFIX = "${DISTRO_NAME}"
SDK_VERSION = "${MACHINE}-${DISTRO_VERSION}"

DISTRO_FEATURES = "debuginfod ipv4 ipv6 polkit seccomp zeroconf"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "pulseaudio gobject-introspection-data ldconfig"

#DISTRO_FEATURES depending on MACHINE_FEATURES:
DISTRO_FEATURES += "${@bb.utils.contains('MACHINE_FEATURES', '3g', '3g', '', d)}"
DISTRO_FEATURES += "${@bb.utils.contains('MACHINE_FEATURES', 'bluetooth', 'bluetooth', '', d)}"
DISTRO_FEATURES += "${@bb.utils.contains('MACHINE_FEATURES', 'wifi', 'wifi', '', d)}"

#override packagroup-base settings
RDEPENDS:packagegroup-base-3g:pn-packagegroup-base = ""

# We don't use qemu-usermode, resp. it is currently not usable straightforward.
MACHINE_FEATURES_BACKFILL_CONSIDERED += "qemu-usermode"
# Remove machine features we don't see any value in.
# -> packagegroup-base doesn't install unwanted packages
MACHINE_FEATURES:remove = "alsa ext2 pci pcmcia serial usbhost usbgadget vfat"

# Systemd
INIT_MANAGER ?= "systemd"
# disable sysusers
# Uids/gids created by systemd-sysusers could potentially clash with
# uids/gids introduced by later update images.
PACKAGECONFIG:remove:pn-systemd = "sysusers"
# enable (configuring) coredump handling
PACKAGECONFIG:append:pn-systemd = " coredump"

JOURNALD_SystemMaxUse ?= "128M"

# Use opkg's ipk
PACKAGE_CLASSES ?= "package_ipk"

# Check if Buildsystem can reach remote sources
CONNECTIVITY_CHECK_URIS ?= "https://github.com/omnect"

# Image configuration
IMAGE_FSTYPES = "ext4.gz wic.xz wic.bmap"
# rm kernel from boot partition, we use a bundled initramfs kernel in rootfs
IMAGE_BOOT_FILES:remove = "uImage Image"
# instead of kernel we want the initramfs bundled kernel
IMAGE_INSTALL:remove = "kernel"

# define partition (default) sizes in KiB
#     Note, the last data partition will be expanded during the first boot after image flashing inside the INITRAMFS.
#     This means, OMNECT_PART_SIZE_DATA is the initial value.
#     Note, machine configurations can override these values.
OMNECT_PART_SIZE_BOOT      ??= "40960"
OMNECT_PART_SIZE_UBOOT_ENV ??= "64"
# given that each machine now defines its own value for OMNECT_PART_SIZE_ROOTFS
# now, a fixed value for a fallback doesn't make sense anymore
# OMNECT_PART_SIZE_ROOTFS    ??= "760832"
OMNECT_PART_SIZE_FACTORY   ??= "102400"
OMNECT_PART_SIZE_CERT      ??= "40960"
OMNECT_PART_SIZE_ETC       ??= "40960"
OMNECT_PART_SIZE_DATA      ??= "524288"

# setup OOM behaviour
OMNECT_VM_PANIC_ON_OOM ?= "0"

# enable variable expansion in wks includes
WICVARS:append = " OMNECT_PART_SIZE_BOOT"
WICVARS:append = " OMNECT_PART_SIZE_UBOOT_ENV"
WICVARS:append = " OMNECT_PART_SIZE_ROOTFS"
WICVARS:append = " OMNECT_PART_SIZE_FACTORY"
WICVARS:append = " OMNECT_PART_SIZE_CERT"
WICVARS:append = " OMNECT_PART_SIZE_ETC"
WICVARS:append = " OMNECT_PART_SIZE_DATA"
WICVARS:append = " OMNECT_PART_OFFSET_UBOOT_ENV1"
WICVARS:append = " OMNECT_PART_OFFSET_UBOOT_ENV2"

# on x86 poky sets these as default dependencies ... we don't use them
WKS_FILE_DEPENDS_BOOTLOADERS:remove = "syslinux systemd-boot"

# location of u-boot environment areas in KiB
#   - Fixed addresses are used (--offset in WKS file), suitable for u-boot configuration.
#   - It has to be aligned with the boot partition (OMNECT_PART_SIZE_BOOT) and the MBR/GPT.
#   - Wic aborts the build, in the case the partitions cannot be located at the fixed location.
#   - The partitions will be initialized with 0xff (--source in WKS file). In this way, u-boot is able
#     to create the default environment during the first boot after flashing the SD-Card image.
#   - No entries inside the partition table will be created (--no-table in WKS file).
#   - The variable OMNECT_PART_SPARE1 is used to define a gap behind the boot partition.
#   - The variable OMNECT_PART_SPARE2 is used to define a gap between both environment partitions.
#     In this way, the environment partitions can be located in different erase blocks.
OMNECT_PART_SPARE1 = "8192"
OMNECT_PART_SPARE2 = "1984"
OMNECT_PART_OFFSET_UBOOT_ENV1 ?= "${@int(d.getVar('OMNECT_PART_SIZE_BOOT')) + \
                                    int(d.getVar('OMNECT_PART_SPARE1'))}"
OMNECT_PART_OFFSET_UBOOT_ENV2 ?= "${@int(d.getVar('OMNECT_PART_OFFSET_UBOOT_ENV1')) + \
                                    int(d.getVar('OMNECT_PART_SIZE_UBOOT_ENV')) + \
                                    int(d.getVar('OMNECT_PART_SPARE2'))}"

# limit max rootfs size
IMAGE_ROOTFS_MAXSIZE = "${OMNECT_PART_SIZE_ROOTFS}"

# initramfs
OMNECT_INITRAMFS_IMAGE_NAME = "${DISTRO_NAME}_${DISTRO_VERSION}_${MACHINE}-initramfs"

# lower alternative default priority
ALTERNATIVE_PRIORITY_coreutils = "30"
ALTERNATIVE_PRIORITY_procps = "40"

# explicitly control utilities used
ALTERNATIVE_PRIORITY_coreutils[dd] = "100"
ALTERNATIVE_PRIORITY_coreutils[cp] = "100"
ALTERNATIVE_PRIORITY_procps[ps] = "100"

# enable sourcing /etc/bashrc so non-loginshells can use bash-completion
CFLAGS:append:pn-bash = " -DSYS_BASHRC='"/etc/bashrc"'"

# enable poweroff for busybox for flash-mode 2
# disable busybox syslog+klog when using systemd
FILESEXTRAPATHS:prepend:pn-busybox := "${LAYERDIR_omnect}/files:"
SRC_URI:remove:pn-busybox = "file://syslog.cfg"
SRC_URI:append:pn-busybox = " \
    file://busybox-enable-poweroff.cfg \
    ${@bb.utils.contains('DISTRO_FEATURES', 'systemd', ' file://busybox-systemd-disable-syslog-klog.cfg','', d)} \
"
SYSTEMD_SERVICE:remove:pn-busybox-syslog = "file://busybox-syslog.service"

# restrict bluez5 dependencies
PACKAGECONFIG:pn-bluez5 ?= "${@bb.utils.contains('OMNECT_RELEASE_IMAGE', '1', 'systemd udev', 'systemd udev deprecated readline tools', d)}"

# restrict docker-moby dependencies
PACKAGECONFIG:pn-docker-moby ?= "seccomp"

# restrict jq dependencies
PACKAGECONFIG:pn-jq = ""

# get rid of perl as runtime dependency in release image
PACKAGES:remove:pn-nss = "nss-smime"
PACKAGES:remove:pn-openssl = "openssl-misc"

# define default devel tools to be included in image
OMNECT_DEVEL_TOOLS = "\
    curl \
    e2fsprogs \
    ethtool \
    gdbserver \
    htop \
    i2c-tools \
    iproute2-ip \
    ldd \
    less \
    lshw \
    lsof \
    ltrace \
    mmc-utils \
    screen \
    strace \
    sysstat \
    tcpdump \
    valgrind \
    ${@bb.utils.contains('DISTRO_FEATURES', 'tpm2', 'tpm2-tools', '', d)} \
    ${@bb.utils.contains('MACHINE_FEATURES', 'efi', 'efibootmgr', '', d)} \
"

OMNECT_DEVEL_TOOLS:append:x86-64 = "acpica dmidecode"

# make target architecture visible for later processing, e.g., in os-release
# note: TARGET_ARCH must be expanded immediately to retrieve the correct value.
OMNECT_TARGET_ARCH := "${TARGET_ARCH}"
