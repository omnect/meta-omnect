diff --git a/arch/arm/include/asm/arch-imx8m/imx-regs.h b/arch/arm/include/asm/arch-imx8m/imx-regs.h
index ccae29ec9a9..78a31d6d2f0 100644
--- a/arch/arm/include/asm/arch-imx8m/imx-regs.h
+++ b/arch/arm/include/asm/arch-imx8m/imx-regs.h
@@ -284,6 +284,10 @@
 #define SNVS_LPSR			0x4c
 #define SNVS_LPLVDR			0x64
 #define SNVS_LPPGDR_INIT		0x41736166
+#define SNVS_LPGPR0			0x90
+#define SNVS_LPGPR1			0x94
+#define SNVS_LPGPR2			0x98
+#define SNVS_LPGPR3			0x9C
 
 #define SNVS_HPSR              (SNVS_BASE_ADDR + 0x14)
 
diff --git a/arch/arm/mach-imx/cpu.c b/arch/arm/mach-imx/cpu.c
index 39b4be8b9cf..d0b1dc9097a 100644
--- a/arch/arm/mach-imx/cpu.c
+++ b/arch/arm/mach-imx/cpu.c
@@ -26,6 +26,7 @@
 #include <sata.h>
 #include <dm/device-internal.h>
 #include <dm/uclass-internal.h>
+#include <fsl_wdog.h>
 
 #ifdef CONFIG_FSL_ESDHC_IMX
 #include <fsl_esdhc_imx.h>
@@ -52,11 +53,20 @@ u32 get_imx_reset_cause(void)
 }
 
 #if defined(CONFIG_DISPLAY_CPUINFO) && !defined(CONFIG_SPL_BUILD)
-static char *get_reset_cause(void)
+char *get_reset_cause(void)
 {
+	static u32 snvs_lpgpr3 = 0xffffffff;
+
+	/* use SNVS (Secure Non-Volatile Storage) LPGPR3 register to detect warm starts */
+	if ( snvs_lpgpr3 == 0xffffffff ) {
+		snvs_lpgpr3 = readl(SNVS_BASE_ADDR + SNVS_LPGPR3);
+		writel(0x0112358d, SNVS_BASE_ADDR + SNVS_LPGPR3);
+	}
+
 	switch (get_imx_reset_cause()) {
 	case 0x00001:
 	case 0x00011:
+		if ( snvs_lpgpr3 == 0x0112358d ) return "WARM BOOT";
 		return "POR";
 	case 0x00004:
 		return "CSU";
diff --git a/cmd/Kconfig b/cmd/Kconfig
index 413051ac4a1..edbb26f6c61 100644
--- a/cmd/Kconfig
+++ b/cmd/Kconfig
@@ -210,6 +210,13 @@ config CMD_REGINFO
 	help
 	  Register dump
 
+config CMD_RSTINFO
+	bool "rstinfo"
+	depends on DISPLAY_CPUINFO
+	default n
+	help
+	  Detect the restart cause. Set the (non-persistent) environment variable rstinfo accordingly.
+
 config CMD_TLV_EEPROM
 	bool "tlv_eeprom"
 	depends on I2C_EEPROM
diff --git a/cmd/Makefile b/cmd/Makefile
index 0337a53b6e9..047f66c8884 100644
--- a/cmd/Makefile
+++ b/cmd/Makefile
@@ -155,6 +155,7 @@ obj-$(CONFIG_CMD_RNG) += rng.o
 obj-$(CONFIG_CMD_KASLRSEED) += kaslrseed.o
 obj-$(CONFIG_CMD_RKMTD) += rkmtd.o
 obj-$(CONFIG_CMD_ROCKUSB) += rockusb.o
+obj-$(CONFIG_CMD_RSTINFO) += rstinfo.o
 obj-$(CONFIG_CMD_RTC) += rtc.o
 obj-$(CONFIG_SANDBOX) += host.o
 obj-$(CONFIG_CMD_SATA) += sata.o
diff --git a/cmd/rstinfo.c b/cmd/rstinfo.c
new file mode 100644
index 00000000000..29f5d99332e
--- /dev/null
+++ b/cmd/rstinfo.c
@@ -0,0 +1,26 @@
+/*
+ *  Get Reset Cause
+ */
+
+#include <common.h>
+#include <command.h>
+
+extern char *get_reset_cause(void);
+static int do_rstinfo(struct cmd_tbl *cmdtp, int flag, int argc, char * const argv[])
+{
+	(void)cmdtp;
+	(void)flag;
+	(void)argc;
+	(void)argv;
+	const char *reset_cause;
+
+	reset_cause = get_reset_cause();
+	printf("Reset cause: %s; set rstinfo environment variable\n", reset_cause);
+	env_set("rstinfo", reset_cause);
+	return 0;
+}
+
+U_BOOT_CMD(rstinfo, 1, 1, do_rstinfo,
+		"get restart cause",
+		"  - get the restart cause; set the environment variable rstinfo accordingly\n"
+);
