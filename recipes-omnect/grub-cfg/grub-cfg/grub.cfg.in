timeout=2

load_env

if [ "x${omnect_os_bootpart}" = "x" ]; then
  set omnect_os_bootpart=2
  save_env omnect_os_bootpart
fi

if [ "x${omnect_validate_update}" = "x" ]; then
  if [ "x${omnect_validate_update_part}" = "x" ]; then
    echo "Normal boot - booting from partition ${omnect_os_bootpart}"
  else
    echo "Update in progress - booting from partition ${omnect_validate_update_part}"
    set omnect_validate_update=1
    save_env omnect_validate_update
    set omnect_os_bootpart=${omnect_validate_update_part}
    # no save_env omnect_os_bootpart here!
  fi
else
  echo "Update validation failed - booting from partition ${omnect_os_bootpart}"
  set omnect_validate_update_part=
  save_env omnect_validate_update_part
  set omnect_validate_update=
  save_env omnect_validate_update
  set omnect_validate_update_failed=1
  save_env omnect_validate_update_failed
fi

if [ "x${omnect_rootblk}" != "x" ]; then
  set kernel_param_rootblk=rootblk=${omnect_rootblk}
  export kernel_param_rootblk
fi

set root=(hd0,gpt${omnect_os_bootpart})
set default="omnect-os"

# to be able to use the timeout, we do need an menuentry. otherwise we could boot directly without one
menuentry 'omnect-os' {
    linux /boot/bzImage rootpart=${omnect_os_bootpart} ${kernel_param_rootblk} @@APPEND@@
    initrd /boot/initramfs.cpio.gz
}
