#!/bin/sh

#
#  Setup files used to trigger factory reset and reboot
#

omnect_device_service_setup_enabled() {
    return 0
}

# get ID field from group file
get_id() {
    local name="$1"
    local file="$2"
    local line=""

    line=$(grep -E -e "^${name}:" ${file})
    if [ -z "${line}" ]; then echo ""; return; fi
    echo $line | awk -F: '{print $3}'
}

fsck_handling() {
    local omnect_run_dir=$1
    local omnect_device_service_user=$2
    local omnect_device_service_group=$3
    local labels=("boot" "cert" "data" "etc")

    echo "{}" > ${omnect_run_dir}/fsck.json
    for i in ${labels[@]}; do
        local content=$(get_fsck_status ${i})
        if [ -n "${content}" ]; then
            jq --arg i "${i}" --arg content "${content}" '{($i): ($content)}' ${omnect_run_dir}/fsck.json > ${omnect_run_dir}/fsck.json.tmp || return 1
            mv ${omnect_run_dir}/fsck.json.tmp ${omnect_run_dir}/fsck.json
            set_bootloader_env_var omnect_fsck_${i} ""
        fi
    done

    run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_run_dir}/fsck.json || return 1
    run_cmd chmod 600 ${omnect_run_dir}/fsck.json || return 1

    return 0
}

factory_reset_status_handling() {
    local omnect_run_dir=$1
    local omnect_device_service_user=$2
    local omnect_device_service_group=$3

    echo -n "" > ${omnect_run_dir}/factory-reset-status

    local status=$(get_bootloader_env_var "${FACTORY_RESET_STATUS_VAR}")
    if [ -n "${status}" ]; then
        echo ${status} > ${omnect_run_dir}/factory-reset-status
        set_bootloader_env_var ${FACTORY_RESET_STATUS_VAR}
    fi

    run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_run_dir}/factory-reset-status || return 1
    run_cmd chmod 600 ${omnect_run_dir}/factory-reset-status || return 1

    return 0
}

# setup conditional temp files for omnect-device-service, e.g. for the update workflow handling;
# (static temp files for omnect-device-service are created via systemd-tmpfiles.d)
run_omnect_device_service_setup () {
    local omnect_device_service_group="$(get_id omnect_device_service ${ROOTFS_DIR}/etc/group)"
    local omnect_device_service_user="$(get_id omnect_device_service ${ROOTFS_DIR}/etc/passwd)"
    local omnect_run_dir="${ROOTFS_DIR}/run/omnect-device-service"  # /run is available in the INITRAMFS
    local omnect_validate_update_failed_file="${omnect_run_dir}/omnect_validate_update_failed"
    local omnect_validate_update_failed_flag="$(get_bootloader_env_var omnect_validate_update_failed)"
    local omnect_validate_update_file="${omnect_run_dir}/omnect_validate_update"
    local omnect_validate_update_flag="$(get_bootloader_env_var omnect_validate_update)"
    local omnect_bootloader_updated_file="${omnect_run_dir}/omnect_bootloader_updated"
    local omnect_bootloader_updated_flag="$(get_bootloader_env_var omnect_bootloader_updated)"

    [ -z "${omnect_device_service_user}" ] && msg "ERROR: user omnect_device_service not found in rootfs" && return 1
    [ -z "${omnect_device_service_group}" ] && msg "ERROR: group omnect_device_service not found in rootfs" && return 1

    run_cmd mkdir -p ${omnect_run_dir} \
    && run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_run_dir} \
    && run_cmd chmod 775 ${omnect_run_dir}

    if [ -n "${omnect_validate_update_flag}" ] && [ -n "${omnect_validate_update_failed_flag}" ]; then
        msg_fatal "both flags are set \"omnect_validate_update\" and \"omnect_validate_update_failed\""
        return 1
    fi

    # omnect update workflow handling
    if [ -n "${omnect_validate_update_flag}" ]; then
        run_cmd touch ${omnect_validate_update_file} \
        && run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_validate_update_file} \
        && run_cmd chmod 644 ${omnect_validate_update_file}
    fi
    if [ -n "${omnect_validate_update_failed_flag}" ]; then
        run_cmd touch ${omnect_validate_update_failed_file} \
        && run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_validate_update_failed_file} \
        && run_cmd chmod 644 ${omnect_validate_update_failed_file} \
        && set_bootloader_env_var omnect_validate_update_failed ""
        # ToDo: discuss if we want to unset `omnect_validate_update_failed`
        # here or reset it via omnect-device-service;
        # a possible reason to not do it here could be that we never
        # reach aziot-identityd-precondition
    fi
    if [ -n "${omnect_bootloader_updated_flag}" ]; then
        run_cmd touch ${omnect_bootloader_updated_file} \
        && run_cmd chown ${omnect_device_service_user}:${omnect_device_service_group} ${omnect_bootloader_updated_file} \
        && run_cmd chmod 600 ${omnect_bootloader_updated_file} \
        && set_bootloader_env_var omnect_bootloader_updated ""
    fi

    fsck_handling "${omnect_run_dir}" "${omnect_device_service_user}" "${omnect_device_service_group}"  || return 1
    factory_reset_status_handling "${omnect_run_dir}" "${omnect_device_service_user}" "${omnect_device_service_group}"  || return 1

    return 0
}

omnect_device_service_setup_run() {
    add_module_post_hook on_exit
    msg omnect_device_service_setup
    run_omnect_device_service_setup
    return=${?}
}
