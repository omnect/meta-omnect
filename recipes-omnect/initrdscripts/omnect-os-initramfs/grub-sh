bootloader_sh_enabled()
{
    return 1  # there is no entry point in this library
}

test_and_mount_boot()
{
    if ! mountpoint -q ${ROOTFS_DIR}/boot; then
        mkdir -p ${ROOTFS_DIR}/boot
        check_fs "boot"
        mount -t vfat /dev/omnect/boot ${ROOTFS_DIR}/boot && msg "mounted ${ROOTFS_DIR}/boot"  || return 1
    fi
}

# get value of bootloader environment variable
get_bootloader_env_var()
{
    local var_name="$1"
    test_and_mount_boot || return 1
    local value=$(grub-editenv ${ROOTFS_DIR}/boot/EFI/BOOT/grubenv list | grep \^${var_name}\= | cut -d'=' -f2)
    debug "get_bootloader_env_var ${var_name}=${value}"
    echo "${value}"
}

# set/delete bootloader environment variable
set_bootloader_env_var()
{
    local  var_name="$1"
    local var_value="$2"  # empty string to delete variable
    debug "set_bootloader_env_var" "${var_name}" "${var_value}"

    test_and_mount_boot || return 1
    if [ -n "$var_value" ];then
        grub-editenv ${ROOTFS_DIR}/boot/EFI/BOOT/grubenv set "${var_name}"="${var_value}" || return 1
    else
        grub-editenv ${ROOTFS_DIR}/boot/EFI/BOOT/grubenv unset "${var_name}" || return 1
    fi
}

save_fsck_status()
{
    local part_name="${1}"
    local source_file="${2}"
    local fsck_res="${3}"

    if [ ! "${part_name}" = "boot" ]; then
        test_and_mount_boot || return 1
        gzip -9c ${source_file} | base64 -w0 - > ${ROOTFS_DIR}/boot/fsck.${part_name}
    elif [ ! "${fsck_res}" = "2" ]; then
        test_and_mount_boot || return 1
        set_bootloader_env_var omnect_fsck_boot $(gzip -9c ${source_file} | base64 -w0 -) || set_bootloader_env_var omnect_fsck_boot $(echo "fsck output to big" | gzip - | base64 -w0 -)
    else
        msg "handled fsck error for boot partition; can not save fsck state"
    fi
}

get_fsck_status()
{
    local part_name="${1}"
    local return=""
    test_and_mount_boot || return 1
    if [ ! "${part_name}" = "boot" ]; then
        return=$(base64 -d ${ROOTFS_DIR}/boot/fsck.${part_name} | zcat) || return 1
        rm ${ROOTFS_DIR}/boot/fsck.${part_name}
    else
        return=$(grub-editenv ${ROOTFS_DIR}/boot/EFI/BOOT/grubenv list | grep \^omnect_fsck_boot\= | cut -d'=' -f2 | base64 -d - | zcat) || return 1
    fi
    echo -n "${return}"
}
