#!/bin/bash

#
# optionally provide flashing whole disk image in INITRAMFS context
#

# Flash Mode
#     2    flash disk image from network to active block device
#
OMNECT_FLASH_MODE=""
OMNECT_FLASH_MODE_FLAG_FILE="/etc/enforce_flash_mode"

# called by generic INITRAMFS
flash_mode_2_enabled() {
    debug "flash mode 2: ${OMNECT_FLASH_MODE}"

    # flag file (part of "omnect-os-initramfs-test")
    if [ -f ${OMNECT_FLASH_MODE_FLAG_FILE} ]; then
        msg "enable flash mode: by ${OMNECT_FLASH_MODE_FLAG_FILE}"
        OMNECT_FLASH_MODE=2
        return 0  # enable flash mode; call main entry point
    fi

    # flash mode triggered at runtime
    OMNECT_FLASH_MODE=$(get_bootloader_env_var flash-mode)
    if [ "${OMNECT_FLASH_MODE}" == "2" ]; then
        return 0  # enable flash mode; call main entry point
    fi

    return 1  # disable flash mode; normal boot; main entry point _NOT_ called
}

run_bmap_tool() {
    local umount_dev=""
    local bmap_ret=""

    # umount, if necessary
    mkdir -p /tmp
    cp /proc/mounts /tmp/all_mounts  # make snapshot
    while read umount_dev ignore; do
        if [[ ${umount_dev} =~ /${blkdev##*/} ]]; then
            echo "umount ${umount_dev}"
            umount ${umount_dev} 2>/dev/null
        fi
    done </tmp/all_mounts

    run_cmd mkfifo /home/omnect/wic.xz || return 1
    run_cmd chown omnect:omnect /home/omnect/wic.xz || return 1

    # bmap file must be copied with scp
    msg "please run  scp <your-bmap-file> omnect@${OMNECT_FLASH_MODE_IP_ADDR}:wic.bmap)"
    while true; do
        if [ -f /home/omnect/wic.bmap ]; then break; fi
        sleep 1
    done

    msg "please run  scp <your-wic-image> omnect@${OMNECT_FLASH_MODE_IP_ADDR}:wic.xz)"
    export PATH
    # wait until scp is complete, resp. uncompress+verify wic image before writing
    run_cmd_stdout bmaptool copy --bmap /home/omnect/wic.bmap \
        /home/omnect/wic.xz /home/omnect/wic || return 1
    vfat_dd_handling "/dev/omnect/boot"
    run_cmd_stdout bmaptool copy --bmap /home/omnect/wic.bmap \
        /home/omnect/wic /dev/omnect/rootblk || return 1
}

vfat_dd_handling()
{
    local dest="${1}"

    # grub:
    # we encountered situations where the device could not boot after
    # flash-mode-2 and could boot if flash-mode-2 did run again.
    # it also could be fixed by manually copying the to be flashed
    # grub binary bootx64.efi again. (in the error case checksums
    # of bootx64.efi on the device and in the wic image differed.)

    # u-boot:
    # we encountered situations where the boot partition has errors
    # after flash-mode-2 with bmaptool.

    dd if=/dev/zero of=${dest} bs=@@OMNECT_PART_SIZE_BOOT@@K count=1
}

# deploy WIC image via network to (same) active block device
run_flash_mode_2() {
    msg "Entering omnect flashing mode 2 ..."

    # disable flash mode for subsequent restarts
    set_bootloader_env_var flash-mode

    # we already mounted /dev/omnect/boot when we're using grub. so we unmount before copying boot.
    if [ -f /usr/bin/grub-editenv ]; then
        sync
        run_cmd umount ${ROOTFS_DIR}/boot
    fi

    flash_mode_setup_network eth0 || return 1
    run_bmap_tool || return 1
    flash_mode_efi_handling

    msg "Rebooting system..."
    sync
    run_cmd reboot -f
    # -- never reached --
}

# main entry point
flash_mode_2_run() {
    add_module_post_hook on_exit
    run_flash_mode_2
    return=${?}
    echo flash_mode_2_run return=${return}
    return ${return}
}
