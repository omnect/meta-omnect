#!/bin/bash

#
# optionally provide flashing whole disk image in INITRAMFS context
#

# Flash Mode
#     3    flash disk image from network to active block device
#
OMNECT_FLASH_MODE=""

OMNECT_FLASH_MODE_VAR="flash-mode"
OMNECT_FLASH_MODE_FLAG_FILE="/etc/enforce_flash_mode_3"
OMNECT_FLASH_MODE_FIFO="/home/omnect/wic.xz"
OMNECT_FLASH_MODE_URL_VAR="flash-mode-url"


# called by generic INITRAMFS
flash_mode_3_enabled() {
    debug "flash mode 3: ${OMNECT_FLASH_MODE}"

    # flag file (part of "omnect-os-initramfs-test")
    if [ -f ${OMNECT_FLASH_MODE_FLAG_FILE} ]; then
        msg "enable flash mode: by ${OMNECT_FLASH_MODE_FLAG_FILE}"
        OMNECT_FLASH_MODE=3
        return 0  # enable flash mode; call main entry point
    fi

    # flash mode triggered at runtime
    OMNECT_FLASH_MODE=$(get_bootloader_env_var ${OMNECT_FLASH_MODE_VAR})
    if [ "${OMNECT_FLASH_MODE}" == "3" ]; then
        return 0  # enable flash mode; call main entry point
    fi

    return 1  # disable flash mode; normal boot; main entry point _NOT_ called
}

run_bmap_tool() {
    local url="${1}"
    local umount_dev=""
    local blk_dev=""
    local bmap_ret=""

    # detect block device
    blk_dev=$(readlink -f /dev/omnect/boot)
    blk_dev=${blk_dev%p*}
    if [ ! -b "${blk_dev}" ]; then msg_fatal "${blk_dev} does not exist or not a block device"; return 1; fi

    # umount, if necessary
    mkdir -p /tmp
    cp /proc/mounts /tmp/all_mounts  # make snapshot
    while read umount_dev ignore; do
        if [[ ${umount_dev} =~ /${blkdev##*/} ]]; then
            echo "umount ${umount_dev}"
            umount ${umount_dev} 2>/dev/null
        fi
    done </tmp/all_mounts

    export PATH

    { run_cmd_stdout bmaptool copy --nobmap ${OMNECT_FLASH_MODE_FIFO} ${blk_dev}; } &
    local bmap_pid=${!}

    curl -s ${url} > ${OMNECT_FLASH_MODE_FIFO} && echo "curl succeeded"  || ( msg_fatal "curl ${url} failed"; return 1; )

    wait ${bmap_pid}
    bmap_ret=${?}

    if [ ${bmap_ret} -eq 0 ]; then return 0; fi  # success

    # bmaptool exited with error:
    #     - mismatch between bmap file and wic image
    #     - broken destination device
    #     - broken network
    #     - usually, there is no way to salvage
    msg_fatal "bmaptool(${blk_dev}) failed: ${bmap_ret}" && return 1
}

# deploy WIC image via network to (same) active block device
run_flash_mode_3() {
    local url=$(get_bootloader_env_var ${OMNECT_FLASH_MODE_URL_VAR} | base64 --decode) || exit 1
    # url=$(echo ${url} | base64 --decode) || exit 1
    msg "Entering omnect flashing mode 3 ... (${url})"
    # disable flash mode for subsequent restarts
    set_bootloader_env_var ${OMNECT_FLASH_MODE_VAR}
    set_bootloader_env_var ${OMNECT_FLASH_MODE_URL_VAR}

    # we already mounted /dev/omnect/boot when we're using grub. so we unmount before copying boot.
    if [ -f /usr/bin/grub-editenv ]; then
        sync
        run_cmd umount ${ROOTFS_DIR}/boot
    fi

    local dest_blk=$(readlink -f /dev/omnect/rootA)
    dest_blk=${dest_blk::-1} # can be /dev/nvme0n1p or /dev/sda
    local p=${dest_blk:0-1}
    if [ "${p}" == "p" ]; then
        dest_blk=${dest_blk::-1}
    else
        p=""
    fi

    flash_mode_setup_fifo || return 1
    flash_mode_setup_network eth0 || return 1

    run_bmap_tool ${url} || return 1

    flash_mode_efi_handling ${dest_blk} ${p}

    msg "Rebooting system..."
    sync
    run_cmd reboot -f
    # -- never reached --
}

# main entry point
flash_mode_3_run() {
    add_module_post_hook on_exit
    run_flash_mode_3
    local ret=${?}
    if [ ${ret} -ne 0 ]; then
        echo flash_mode_3_run return=${ret}
        sleep 120
        return ${ret}
    else
        return 0
   fi

}
