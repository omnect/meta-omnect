#!/bin/bash

#
# optionally provide flashing whole disk image in INITRAMFS context
#

# Flash Mode
#     3    flash disk image from network to active block device
#
OMNECT_FLASH_MODE=""

# called by generic INITRAMFS
flash_mode_3_enabled() {
    debug "flash mode 3: ${OMNECT_FLASH_MODE}"

    # flash mode triggered at runtime
    OMNECT_FLASH_MODE=$(get_bootloader_env_var flash-mode)
    if [ "${OMNECT_FLASH_MODE}" == "3" ]; then
        return 0  # enable flash mode; call main entry point
    fi

    return 1  # disable flash mode; normal boot; main entry point _NOT_ called
}

run_bmap_tool() {
    local url="${1}"
    local url_sha256="${2}"
    local umount_dev=""
    local bmap_ret=""

    # umount, if necessary
    mkdir -p /tmp
    cp /proc/mounts /tmp/all_mounts  # make snapshot
    while read umount_dev ignore; do
        if [[ ${umount_dev} =~ /${blkdev##*/} ]]; then
            echo "umount ${umount_dev}"
            umount ${umount_dev} 2>/dev/null
        fi
    done </tmp/all_mounts

    local curl_opts=""
    local machine_features="$(grep ^MACHINE_FEATURES= /etc/os-release | awk -F'"' '{print $2}')"
    [[ ! " ${machine_features} " =~ " rtc " ]] && curl_opts+="-k "
    curl_opts+="--no-progress-meter -Lo"
    run_cmd_stdout "curl ${curl_opts} /home/omnect/wic.sha256 \"${url_sha256}\"" && echo "curl \"${url_sha256}\" succeeded" \
        || { msg_fatal "curl ${url_sha256} failed"; return 1; }
    run_cmd_stdout "curl ${curl_opts} /home/omnect/wic.xz \"${url}\"" && echo "curl ${url} succeeded" \
        || { msg_fatal "curl ${url} failed"; return 1; }
    run_cmd_stdout "echo \"$(awk '{print $1}' /home/omnect/wic.sha256)  /home/omnect/wic.xz\" | sha256sum -c" || return 1
    export PATH
    run_cmd_stdout bmaptool copy --nobmap /home/omnect/wic.xz /dev/omnect/rootblk || return 1
}

# deploy WIC image via network to (same) active block device
run_flash_mode_3() {
    local url=$(get_bootloader_env_var flash-mode-url | base64 --decode) || { msg_fatal "couldn't get \"flash-mode-url\""; return 1; }
    local url_sha256=$(get_bootloader_env_var flash-mode-url-sha256 | base64 --decode) || { msg_fatal "couldn't get \"flash-mode-url-sha256\""; return 1; }

    if [ -z "${url}" ] || [ -z "${url_sha256}" ]; then
        msg "invalid parameters:"
        msg "url=${url}"
        msg "url_sha256=${url_sha256}"
        return 1
    fi

    msg "Entering omnect flashing mode 3 ..."
    # disable flash mode for subsequent restarts
    set_bootloader_env_var flash-mode
    set_bootloader_env_var flash-mode-url
    set_bootloader_env_var flash-mode-url-sha256

    # we already mounted /dev/omnect/boot when we're using grub. so we unmount before copying boot.
    if [ -f /usr/bin/grub-editenv ]; then
        sync
        run_cmd umount ${ROOTFS_DIR}/boot
    fi

    local dest_blk=$(readlink -f /dev/omnect/rootA)
    dest_blk=${dest_blk::-1} # can be /dev/nvme0n1p or /dev/sda
    local p=${dest_blk:0-1}
    if [ "${p}" == "p" ]; then
        dest_blk=${dest_blk::-1}
    else
        p=""
    fi

    flash_mode_setup_network eth0 || return 1
    run_bmap_tool ${url} ${url_sha256} || return 1
    flash_mode_efi_handling

    msg "Rebooting system..."
    sync
    run_cmd reboot -f
    # -- never reached --
}

# main entry point
flash_mode_3_run() {
    add_module_post_hook on_exit
    run_flash_mode_3
    return=${?}
    echo flash_mode_3_run return=${return}
    return ${return}
}
