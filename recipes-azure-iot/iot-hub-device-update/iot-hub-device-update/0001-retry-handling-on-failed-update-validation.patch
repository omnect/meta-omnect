From 5cd0ae6c2576f7aa9102841d616c5cf19365aa46 Mon Sep 17 00:00:00 2001
From: Jan Zachmann <jan.zachmann@conplement.de>
Date: Fri, 5 May 2023 12:33:57 +0200
Subject: [PATCH] retry handling on failed update validation

---
 .../result_codes.json                         |  4 +++
 src/adu_workflow/src/agent_workflow.c         | 25 ++++++++++++++++++-
 .../swupdate_handler/src/swupdate_handler.cpp | 14 ++++++++++-
 3 files changed, 41 insertions(+), 2 deletions(-)

diff --git a/scripts/error_code_generator_defs/result_codes.json b/scripts/error_code_generator_defs/result_codes.json
index 36ce7352..4d02404b 100644
--- a/scripts/error_code_generator_defs/result_codes.json
+++ b/scripts/error_code_generator_defs/result_codes.json
@@ -337,6 +337,10 @@
               {
                 "name": "ADUC_ERC_SWUPDATE_HANDLER_INSTALL_FAILURE_UNKNOWNEXCEPTION",
                 "value": 767
+              },
+              {
+                "name": "ADUC_ERC_SWUPDATE_HANDLER_INSTALL_FAILURE_VALIDATION",
+                "value": 800
               }
             ]
           },
diff --git a/src/adu_workflow/src/agent_workflow.c b/src/adu_workflow/src/agent_workflow.c
index 23ad8a40..b4a47a32 100644
--- a/src/adu_workflow/src/agent_workflow.c
+++ b/src/adu_workflow/src/agent_workflow.c
@@ -14,7 +14,9 @@
 
 #define __STDC_FORMAT_MACROS
 #include <inttypes.h> // PRIu64
+#include <stdio.h>
 #include <stdlib.h>
+#include <unistd.h>
 
 #include <time.h>
 
@@ -427,6 +429,9 @@ void ADUC_Workflow_HandlePropertyUpdate(
     ADUC_WorkflowData* currentWorkflowData, const unsigned char* propertyUpdateValue, bool forceUpdate)
 {
     ADUC_WorkflowHandle nextWorkflow;
+    const char omnectValidateUpdateFailedFile[FILENAME_MAX] =
+        "/run/omnect-device-service/omnect_validate_update_failed";
+    const char omnectUpdateRetryFile[FILENAME_MAX] = "/run/omnect-device-service/omnect_update_retry";
 
     ADUC_Result result = workflow_init((const char*)propertyUpdateValue, true /* shouldValidate */, &nextWorkflow);
 
@@ -494,6 +499,25 @@ void ADUC_Workflow_HandlePropertyUpdate(
 
                 Log_Debug("Retry %s is applicable", newRetryToken);
 
+                // If omnect_validate_update_failed file barrier is present and an update retry was
+                // triggered by cloud, we create omnect_update_retry file in order to try to install
+                // the update again.
+                if (0 == access(omnectValidateUpdateFailedFile, F_OK))
+                {
+                    FILE* fp;
+
+                    Log_Debug("retry: '%s' detected", omnectValidateUpdateFailedFile);
+
+                    if (NULL == (fp = fopen(omnectUpdateRetryFile, "w")))
+                    {
+                        Log_Error("Couldn't create '%s'", omnectUpdateRetryFile);
+                    }
+                    else
+                    {
+                        fclose(fp);
+                    }
+                }
+
                 // Sets both cancellation type to Retry and updates the current retry token
                 workflow_update_retry_deployment(currentWorkflowData->WorkflowHandle, newRetryToken);
 
@@ -964,7 +988,6 @@ void ADUC_Workflow_WorkCompletionCallback(const void* workCompletionToken, ADUC_
                     // Reset workflow state to process deployment and transfer
                     // the deferred workflow to current.
                     workflow_update_for_replacement(workflowData->WorkflowHandle);
-
                 }
                 else
                 {
diff --git a/src/extensions/step_handlers/swupdate_handler/src/swupdate_handler.cpp b/src/extensions/step_handlers/swupdate_handler/src/swupdate_handler.cpp
index 8ecad89b..a0a6fb23 100644
--- a/src/extensions/step_handlers/swupdate_handler/src/swupdate_handler.cpp
+++ b/src/extensions/step_handlers/swupdate_handler/src/swupdate_handler.cpp
@@ -130,11 +130,23 @@ ADUC_Result SWUpdateHandlerImpl::Download(const tagADUC_WorkflowData* workflowDa
     ADUC_WorkflowHandle workflowHandle = workflowData->WorkflowHandle;
     char* workFolder = workflow_get_workfolder(workflowHandle);
     int fileCount = 0;
-
     char* updateType = workflow_get_update_type(workflowHandle);
     char* updateName = nullptr;
     unsigned int updateTypeVersion = 0;
     bool updateTypeOk = false;
+    std::ifstream omnectValidateUpdateFailedFile("/var/run/omnect-device-service/omnect_validate_update_failed");
+    std::ifstream omnectUpdateRetryFile("/var/run/omnect-device-service/omnect_update_retry");
+
+    // We return with an error in case we just booted into here after an update validation
+    // failed on the new partition. We do this in order to step into update failed state 
+    // which also shows up in ADU cloud and offers triggering an update retry.
+    // If the cloud triggered a retry we ignore omnect_validate_update_failed flag.
+    if (omnectValidateUpdateFailedFile.good() && !omnectUpdateRetryFile.good())
+    {
+        Log_Error("Update validation on new boot part failed. Rebooted to old boot part.");
+        result.ExtendedResultCode = ADUC_ERC_SWUPDATE_HANDLER_INSTALL_FAILURE_VALIDATION;
+        goto done;
+    }
 
     if (workflow_is_cancel_requested(workflowHandle))
     {
-- 
2.34.1

